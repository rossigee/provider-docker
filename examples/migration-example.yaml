# Migration example: KubeFTPD from complex Terraform composition to simple native resource
# 
# BEFORE: Complex terraform-based composition with 538 lines
# AFTER: Clean native Docker container resource

apiVersion: container.docker.crossplane.io/v1alpha1
kind: Container
metadata:
  name: kubeftpd
  namespace: default
  annotations:
    # Migration notes
    docker.crossplane.io/migrated-from: terraform-provider-docker
    docker.crossplane.io/migration-date: "2025-01-21"
spec:
  forProvider:
    image: ghcr.io/rossigee/kubeftpd:test12
    name: kubeftpd
    
    # Port mappings - FTP control and data ports
    ports:
    - containerPort: 2121
      hostPort: 2121
      protocol: TCP
    # FTP passive mode port range
    - containerPort: 10000
      hostPort: 10000
      protocol: TCP
    - containerPort: 10019
      hostPort: 10019
      protocol: TCP
    
    # Environment configuration
    environment:
    - name: FTP_PORT
      value: "2121"
    - name: FTP_PUBLIC_IP
      value: "172.16.2.3"
    - name: KUBECONFIG
      value: "/etc/kubernetes/kubeconfig"
    
    # Volume mounts - simplified from complex GPG-encrypted config bundles
    volumes:
    - name: kubeconfig
      mountPath: /etc/kubernetes/kubeconfig
      readOnly: true
      source:
        secret:
          secretName: kubeftpd-kubeconfig
          items:
          - key: config
            path: kubeconfig
    - name: data
      mountPath: /data
      source:
        hostPath:
          path: /share/kubeftpd-data
          type: DirectoryOrCreate
    
    # Health check
    healthCheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      startPeriod: 60s
    
    # Security context - proper capabilities instead of privileged mode
    securityContext:
      runAsUser: 1000
      runAsNonRoot: true
      readOnlyRootFilesystem: false
      allowPrivilegeEscalation: false
      capabilities:
        add: 
        - NET_BIND_SERVICE
        - DAC_OVERRIDE
        - CHOWN
        - FOWNER
        drop:
        - ALL
    
    # Resource constraints
    resources:
      limits:
        memory: "256Mi"
        cpu: "0.5"
      requests:
        memory: "128Mi"
        cpu: "0.1"
    
    # Restart policy
    restartPolicy: unless-stopped
    
    # Labels for monitoring and management
    labels:
      app: kubeftpd
      version: test12
      migrated-from: terraform
      crossplane.io/managed: "true"
  
  providerConfigRef:
    name: assange-docker
  
  deletionPolicy: Delete

---
# Supporting secret for kubeconfig
apiVersion: v1
kind: Secret
metadata:
  name: kubeftpd-kubeconfig
  namespace: default
type: Opaque
stringData:
  config: |
    apiVersion: v1
    kind: Config
    # ... kubeconfig contents ...

---
# Benefits of this migration:
# 1. Eliminated complex Terraform composition (538 lines â†’ ~100 lines)
# 2. Removed GPG encryption/decryption pipeline complexity
# 3. Direct Docker API integration for better performance
# 4. Native Kubernetes resource status and conditions
# 5. Superior debugging with kubectl and standard tooling
# 6. Simplified secret management using Kubernetes secrets
# 7. Proper security context instead of privileged containers
# 8. Health checks integrated with Kubernetes readiness/liveness
# 9. Resource constraints for better cluster resource management
# 10. Clean composition patterns for larger deployments