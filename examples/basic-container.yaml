apiVersion: container.docker.crossplane.io/v1alpha1
kind: Container
metadata:
  name: nginx-container
  namespace: default
spec:
  forProvider:
    # Docker image to run
    image: nginx:1.21
    
    # Container name (optional)
    name: my-nginx
    
    # Port mappings
    ports:
    - containerPort: 80
      hostPort: 8080
      protocol: TCP
    
    # Environment variables
    environment:
    - name: NGINX_HOST
      value: example.com
    - name: NGINX_PORT
      value: "80"
    
    # Labels
    labels:
      app: nginx
      version: "1.21"
    
    # Restart policy
    restartPolicy: always
    
    # Start container after creation
    startOnCreate: true
  
  # Provider configuration reference
  providerConfigRef:
    name: default
  
  # Deletion policy
  deletionPolicy: Delete
---
apiVersion: container.docker.crossplane.io/v1alpha1
kind: Container
metadata:
  name: redis-container
  namespace: default
spec:
  forProvider:
    image: redis:7-alpine
    name: my-redis
    
    # Custom command
    command: ["redis-server"]
    args: ["--appendonly", "yes"]
    
    # Port mapping
    ports:
    - containerPort: 6379
      hostPort: 6379
    
    # Environment variables from secrets
    environment:
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: redis-secret
          key: password
    
    # Volume mounts
    volumes:
    - name: redis-data
      mountPath: /data
      source:
        hostPath:
          path: /opt/redis/data
          type: DirectoryOrCreate
    
    # Resource limits
    resources:
      limits:
        memory: "512Mi"
        cpu: "0.5"
      requests:
        memory: "256Mi"
        cpu: "0.1"
    
    # Security context
    securityContext:
      runAsUser: 999
      runAsNonRoot: true
      readOnlyRootFilesystem: false
    
    # Health check
    healthCheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    restartPolicy: unless-stopped
  
  providerConfigRef:
    name: default
  
  deletionPolicy: Delete