/*
Copyright 2025 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: containers.container.docker.crossplane.io
spec:
  group: container.docker.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - docker
    kind: Container
    listKind: ContainerList
    plural: containers
    singular: container
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.forProvider.image
      name: IMAGE
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state.status
      name: STATE
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Container is a managed resource that represents a Docker container.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ContainerSpec defines the desired state of a Container.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ForProvider contains the provider-specific configuration.
                properties:
                  args:
                    description: Args are the arguments to pass to the command.
                    items:
                      type: string
                    type: array
                  command:
                    description: Command overrides the default command specified by
                      the image.
                    items:
                      type: string
                    type: array
                  dns:
                    description: DNS configuration for the container.
                    items:
                      type: string
                    type: array
                  dnsOptions:
                    description: DNSOptions sets DNS options.
                    items:
                      type: string
                    type: array
                  dnsSearch:
                    description: DNSSearch sets the DNS search domains.
                    items:
                      type: string
                    type: array
                  environment:
                    description: Environment variables for the container.
                    items:
                      description: EnvVar represents an environment variable.
                      properties:
                        name:
                          description: Name of the environment variable.
                          type: string
                        value:
                          description: Value of the environment variable.
                          type: string
                        valueFrom:
                          description: ValueFrom defines a source for the environment
                            variable value.
                          properties:
                            configMapKeyRef:
                              description: ConfigMapKeyRef selects a key of a ConfigMap
                                in the same namespace.
                              properties:
                                key:
                                  description: Key to select from the ConfigMap.
                                  type: string
                                name:
                                  description: Name of the ConfigMap.
                                  type: string
                                optional:
                                  description: Optional specifies whether the key
                                    must exist.
                                  type: boolean
                              required:
                              - key
                              - name
                              type: object
                            secretKeyRef:
                              description: SecretKeyRef selects a key of a secret
                                in the same namespace.
                              properties:
                                key:
                                  description: Key to select from the secret.
                                  type: string
                                name:
                                  description: Name of the secret.
                                  type: string
                                optional:
                                  description: Optional specifies whether the key
                                    must exist.
                                  type: boolean
                              required:
                              - key
                              - name
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  extraHosts:
                    description: ExtraHosts adds entries to /etc/hosts.
                    items:
                      type: string
                    type: array
                  healthCheck:
                    description: HealthCheck defines health checking configuration.
                    properties:
                      interval:
                        description: Interval between health checks (default 30s).
                        type: string
                      retries:
                        description: Retries is the number of consecutive failures
                          needed to consider unhealthy.
                        type: integer
                      startPeriod:
                        description: StartPeriod for the container to initialize (default
                          0s).
                        type: string
                      test:
                        description: |-
                          Test is the command to run to check health.
                          Examples: ["CMD", "curl", "-f", "http://localhost/health"]
                        items:
                          type: string
                        type: array
                      timeout:
                        description: Timeout for each health check (default 30s).
                        type: string
                    required:
                    - test
                    type: object
                  hostname:
                    description: Hostname sets the hostname of the container.
                    type: string
                  image:
                    description: |-
                      Image is the Docker image to run.
                      Examples: nginx:1.21, alpine:latest, ubuntu:20.04
                    type: string
                  init:
                    description: Init specifies if this is an init container.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to the container.
                    type: object
                  maximumRetryCount:
                    description: MaximumRetryCount is used with restart policy "on-failure".
                    type: integer
                  name:
                    description: Name is the container name. If not specified, a name
                      will be generated.
                    type: string
                  networkMode:
                    description: |-
                      NetworkMode sets the networking mode for the container.
                      Examples: bridge, host, none, container:<name>
                    type: string
                  networks:
                    description: Networks to attach the container to.
                    items:
                      description: NetworkAttachment describes how to attach the container
                        to a network.
                      properties:
                        aliases:
                          description: Aliases for the container on this network.
                          items:
                            type: string
                          type: array
                        ipAddress:
                          description: IPAddress to assign to the container on this
                            network.
                          type: string
                        ipv6Address:
                          description: IPv6Address to assign to the container on this
                            network.
                          type: string
                        links:
                          description: Links to other containers (legacy).
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the network.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  ports:
                    description: Ports to expose from the container.
                    items:
                      description: PortSpec defines a port to expose from the container.
                      properties:
                        containerPort:
                          description: ContainerPort is the port number on the container.
                          format: int32
                          type: integer
                        hostIP:
                          description: |-
                            HostIP binds the port to a specific host interface.
                            Defaults to all interfaces (0.0.0.0).
                          type: string
                        hostPort:
                          description: |-
                            HostPort is the port number on the host.
                            If not specified, the container port is not exposed on the host.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: Protocol for the port. Must be UDP, TCP, or
                            SCTP.
                          enum:
                          - TCP
                          - UDP
                          - SCTP
                          type: string
                      required:
                      - containerPort
                      type: object
                    type: array
                  privileged:
                    description: Privileged runs the container in privileged mode.
                    type: boolean
                  remove:
                    description: Remove automatically removes the container when it
                      exits.
                    type: boolean
                  resources:
                    description: Resources specify compute resource requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute
                          resources required.
                        type: object
                    type: object
                  restartPolicy:
                    description: RestartPolicy defines the restart policy for the
                      container.
                    enum:
                    - "no"
                    - on-failure
                    - always
                    - unless-stopped
                    type: string
                  securityContext:
                    description: SecurityContext defines security attributes.
                    properties:
                      allowPrivilegeEscalation:
                        description: AllowPrivilegeEscalation controls whether a process
                          can gain more privileges.
                        type: boolean
                      appArmorProfile:
                        description: AppArmorProfile is the AppArmor profile to apply.
                        properties:
                          localhostProfile:
                            description: |-
                              LocalhostProfile indicates a profile defined in a file on the node.
                              Only used when Type is "Localhost".
                            type: string
                          type:
                            description: Type indicates which kind of AppArmor profile
                              will be applied.
                            enum:
                            - RuntimeDefault
                            - Unconfined
                            - Localhost
                            type: string
                        required:
                        - type
                        type: object
                      capabilities:
                        description: Capabilities to add/drop.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              type: string
                            type: array
                        type: object
                      readOnlyRootFilesystem:
                        description: ReadOnlyRootFilesystem mounts the container's
                          root filesystem as read-only.
                        type: boolean
                      runAsGroup:
                        description: RunAsGroup is the GID to run the container as.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: RunAsNonRoot indicates whether the container
                          must be run as a non-root user.
                        type: boolean
                      runAsUser:
                        description: RunAsUser is the UID to run the container as.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the SELinux options to apply.
                        properties:
                          level:
                            description: Level is a SELinux level label.
                            type: string
                          role:
                            description: Role is a SELinux role label.
                            type: string
                          type:
                            description: Type is a SELinux type label.
                            type: string
                          user:
                            description: User is a SELinux user label.
                            type: string
                        type: object
                      seccompProfile:
                        description: SeccompProfile is the seccomp profile to apply.
                        properties:
                          localhostProfile:
                            description: |-
                              LocalhostProfile indicates a profile defined in a file on the node.
                              Only used when Type is "Localhost".
                            type: string
                          type:
                            description: Type indicates which kind of seccomp profile
                              will be applied.
                            enum:
                            - RuntimeDefault
                            - Unconfined
                            - Localhost
                            type: string
                        required:
                        - type
                        type: object
                    type: object
                  startOnCreate:
                    description: |-
                      StartOnCreate starts the container after creating it.
                      Defaults to true.
                    type: boolean
                  user:
                    description: |-
                      User sets the user inside the container.
                      Can be a username, UID, or UID:GID format.
                    type: string
                  volumes:
                    description: Volumes to mount in the container.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: MountPath within the container at which the
                            volume should be mounted.
                          type: string
                        name:
                          description: Name must match the name of a volume in the
                            VolumeSource.
                          type: string
                        readOnly:
                          description: ReadOnly mounts the volume as read-only.
                          type: boolean
                        source:
                          description: VolumeSource represents the location and type
                            of the mounted volume.
                          properties:
                            bind:
                              description: Bind represents a bind mount.
                              properties:
                                propagation:
                                  description: Propagation mode for the mount.
                                  enum:
                                  - private
                                  - rprivate
                                  - shared
                                  - rshared
                                  - slave
                                  - rslave
                                  type: string
                                sourcePath:
                                  description: SourcePath on the host.
                                  type: string
                              required:
                              - sourcePath
                              type: object
                            configMap:
                              description: ConfigMap represents a configMap that should
                                be mounted.
                              properties:
                                defaultMode:
                                  description: DefaultMode for created files.
                                  format: int32
                                  type: integer
                                items:
                                  description: Items to project from the ConfigMap.
                                  items:
                                    description: KeyToPath maps a data key to a path.
                                    properties:
                                      key:
                                        description: Key is the key to project.
                                        type: string
                                      mode:
                                        description: Mode is the file mode.
                                        format: int32
                                        type: integer
                                      path:
                                        description: Path is the relative path of
                                          the file to map the key to.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: Name of the ConfigMap.
                                  type: string
                                optional:
                                  description: Optional specifies whether the ConfigMap
                                    must exist.
                                  type: boolean
                              required:
                              - name
                              type: object
                            emptyDir:
                              description: EmptyDir represents a temporary directory
                                that shares a container's lifetime.
                              properties:
                                sizeLimit:
                                  description: SizeLimit for the EmptyDir volume.
                                  type: string
                              type: object
                            hostPath:
                              description: HostPath represents a host path mapped
                                into the container.
                              properties:
                                path:
                                  description: Path of the directory on the host.
                                  type: string
                                type:
                                  description: Type for HostPath Volume.
                                  type: string
                              required:
                              - path
                              type: object
                            secret:
                              description: Secret represents a secret that should
                                be mounted.
                              properties:
                                defaultMode:
                                  description: DefaultMode for created files.
                                  format: int32
                                  type: integer
                                items:
                                  description: Items to project from the secret.
                                  items:
                                    description: KeyToPath maps a data key to a path.
                                    properties:
                                      key:
                                        description: Key is the key to project.
                                        type: string
                                      mode:
                                        description: Mode is the file mode.
                                        format: int32
                                        type: integer
                                      path:
                                        description: Path is the relative path of
                                          the file to map the key to.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                optional:
                                  description: Optional specifies whether the Secret
                                    must exist.
                                  type: boolean
                                secretName:
                                  description: Name of the secret.
                                  type: string
                              required:
                              - secretName
                              type: object
                            volume:
                              description: Volume represents a Docker volume.
                              properties:
                                volumeName:
                                  description: VolumeName is the name of the Docker
                                    volume.
                                  type: string
                              required:
                              - volumeName
                              type: object
                          type: object
                      required:
                      - mountPath
                      - name
                      - source
                      type: object
                    type: array
                  workingDir:
                    description: WorkingDir sets the working directory for the container.
                    type: string
                required:
                - image
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ContainerStatus represents the observed state of a Container.
            properties:
              atProvider:
                description: AtProvider contains the observed state of the Container.
                properties:
                  created:
                    description: Created is when the container was created.
                    format: date-time
                    type: string
                  id:
                    description: ID is the container ID assigned by Docker.
                    type: string
                  image:
                    description: Image is the resolved image name and ID.
                    properties:
                      digest:
                        description: Digest is the image digest.
                        type: string
                      id:
                        description: ID is the image ID.
                        type: string
                      name:
                        description: Name is the image name used.
                        type: string
                    type: object
                  name:
                    description: Name is the actual container name.
                    type: string
                  networks:
                    additionalProperties:
                      description: NetworkInfo contains network attachment information.
                      properties:
                        endpointID:
                          description: EndpointID is the endpoint ID.
                          type: string
                        gateway:
                          description: Gateway is the network gateway.
                          type: string
                        globalIPv6Address:
                          description: GlobalIPv6Address is the global IPv6 address.
                          type: string
                        globalIPv6PrefixLen:
                          description: GlobalIPv6PrefixLen is the global IPv6 prefix
                            length.
                          format: int32
                          type: integer
                        ipAddress:
                          description: IPAddress is the container's IP address on
                            this network.
                          type: string
                        ipPrefixLen:
                          description: IPPrefixLen is the IP prefix length.
                          format: int32
                          type: integer
                        ipv6Gateway:
                          description: IPv6Gateway is the IPv6 gateway.
                          type: string
                        macAddress:
                          description: MacAddress is the MAC address.
                          type: string
                        networkID:
                          description: NetworkID is the network ID.
                          type: string
                      type: object
                    description: Networks shows the networks the container is attached
                      to.
                    type: object
                  ports:
                    description: Ports shows the actual port mappings.
                    items:
                      description: ContainerPort shows an exposed port.
                      properties:
                        ip:
                          description: IP is the host IP the port is bound to.
                          type: string
                        privatePort:
                          description: PrivatePort is the port on the container.
                          format: int32
                          type: integer
                        publicPort:
                          description: PublicPort is the port on the host.
                          format: int32
                          type: integer
                        type:
                          description: Type is the port type (tcp/udp).
                          type: string
                      type: object
                    type: array
                  started:
                    description: Started is when the container was started.
                    format: date-time
                    type: string
                  state:
                    description: State is the container state.
                    properties:
                      dead:
                        description: Dead indicates if the container is dead.
                        type: boolean
                      error:
                        description: Error is any error from the container.
                        type: string
                      exitCode:
                        description: ExitCode is the exit code of the container.
                        format: int64
                        type: integer
                      finishedAt:
                        description: FinishedAt is when the container finished.
                        format: date-time
                        type: string
                      health:
                        description: Health is the health check result.
                        properties:
                          failingStreak:
                            description: FailingStreak is the number of consecutive
                              failed health checks.
                            type: integer
                          log:
                            description: Log contains recent health check results.
                            items:
                              description: HealthCheckResult represents a single health
                                check result.
                              properties:
                                end:
                                  description: End is when the health check ended.
                                  format: date-time
                                  type: string
                                exitCode:
                                  description: ExitCode is the exit code of the health
                                    check.
                                  type: integer
                                output:
                                  description: Output is the health check output.
                                  type: string
                                start:
                                  description: Start is when the health check started.
                                  format: date-time
                                  type: string
                              type: object
                            type: array
                          status:
                            description: Status is the health status (starting, healthy,
                              unhealthy).
                            type: string
                        type: object
                      oomKilled:
                        description: OOMKilled indicates if the container was killed
                          due to OOM.
                        type: boolean
                      paused:
                        description: Paused indicates if the container is paused.
                        type: boolean
                      pid:
                        description: Pid is the process ID of the container's main
                          process.
                        format: int64
                        type: integer
                      restarting:
                        description: Restarting indicates if the container is restarting.
                        type: boolean
                      running:
                        description: Running indicates if the container is running.
                        type: boolean
                      startedAt:
                        description: StartedAt is when the container started.
                        format: date-time
                        type: string
                      status:
                        description: Status is the container status (created, running,
                          paused, restarting, removing, exited, dead).
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
